spring.datasource.url=jdbc:postgresql://localhost:5432/maker
spring.datasource.username=postgres
spring.datasource.password=1809
server.port=8090
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#Using.generated.security.password= b913c187-2f47-480b-a760-12e2a442aa1d

spring.jpa.properties.hibernate.globally_quoted_identifiers=true

#spring.security.oauth2.client.registration.google.client-id=860901696821-neqb5fmqs9vc0bbq63m1om8q4qgl4iib.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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

#spring.security.oauth2.client.registration.google.scope=openid,email,profile
#spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=name

#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

